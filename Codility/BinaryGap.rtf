{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Roboto-Regular;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset0 Roboto-Medium;
}
{\colortbl;\red255\green255\blue255;\red54\green54\blue54;\red249\green249\blue249;\red100\green15\blue144;
\red0\green0\blue0;\red13\green107\blue153;\red255\green255\blue255;\red152\green74\blue3;\red75\green83\blue92;
\red15\green112\blue1;}
{\*\expandedcolortbl;;\cssrgb\c27451\c27451\c27451;\cssrgb\c98039\c98039\c98039;\cssrgb\c47451\c15686\c63137;
\cssrgb\c0\c0\c0;\cssrgb\c0\c49804\c66667;\cssrgb\c100000\c100000\c100000;\cssrgb\c66667\c36471\c0;\cssrgb\c36471\c40000\c43529;
\cssrgb\c0\c50196\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl399\sa210\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A\'a0
\i binary gap
\i0 \'a0within a positive integer N is any maximal sequence of consecutive zeros that is surrounded by ones at both ends in the binary representation of N.\
For example, number 9 has binary representation\'a0
\f1 1001
\f0 \'a0and contains a binary gap of length 2. The number 529 has binary representation\'a0
\f1 1000010001
\f0 \'a0and contains two binary gaps: one of length 4 and one of length 3. The number 20 has binary representation\'a0
\f1 10100
\f0 \'a0and contains one binary gap of length 1. The number 15 has binary representation\'a0
\f1 1111
\f0 \'a0and has no binary gaps. The number 32 has binary representation\'a0
\f1 100000
\f0 \'a0and has no binary gaps.\
Write a function:\
\pard\pardeftab720\sl342\sa180\partightenfactor0

\f1\fs24 \cf2 class Solution \{ public int solution(int N); \}\cb1 \
\pard\pardeftab720\sl399\sa210\partightenfactor0

\f0\fs28 \cf2 \cb3 that, given a positive integer N, returns the length of its longest binary gap. The function should return 0 if N doesn't contain a binary gap.\
For example, given N = 1041 the function should return 5, because N has binary representation\'a0
\f1 10000010001
\f0 \'a0and so its longest binary gap is of length 5. Given N = 32 the function should return 0, because N has binary representation '100000' and thus no binary gaps.\
Write an\'a0
\f2 efficient
\f0 \'a0algorithm for the following assumptions:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 N is an integer within the range [1..2,147,483,647].\cb1 \
\pard\pardeftab720\sl280\partightenfactor0

\f1\fs24 \cf4 \strokec4 \
\
\
\
class\cf5 \strokec5  \cf6 \strokec6 Solution\cf5 \strokec5  \{\cb7 \
\pard\pardeftab720\sl280\partightenfactor0
\cf5 \cb1     \cf4 \strokec4 public\cf5 \strokec5  \cf4 \strokec4 int\cf5 \strokec5  \cf6 \strokec6 solution\cf8 \strokec8 (\cf4 \strokec4 int\cf8 \strokec8  N)\cf5 \strokec5  \{\cb7 \
\cb1         \cf9 \strokec9 // write your code in Java SE 8\cf5 \cb7 \strokec5 \
\cb1         String binary = Integer.toBinaryString(N);\cb7 \
\cb1         \cf4 \strokec4 int\cf5 \strokec5  counter = \cf8 \strokec8 0\cf5 \strokec5 ;\cb7 \
\cb1         \cf4 \strokec4 int\cf5 \strokec5  highestCounter = \cf8 \strokec8 0\cf5 \strokec5 ;\cb7 \
\cb1         \cb7 \
\cb1         \cf4 \strokec4 for\cf5 \strokec5  (\cf4 \strokec4 int\cf5 \strokec5  i=\cf8 \strokec8 0\cf5 \strokec5 ;i<binary.length(); i++) \{\cb7 \
\cb1             \cf4 \strokec4 if\cf5 \strokec5  (binary.charAt(i) == \cf10 \strokec10 '0'\cf5 \strokec5 ) \{\cb7 \
\cb1                 counter++;\cb7 \
\cb1             \} \cf4 \strokec4 else\cf5 \strokec5  \cf4 \strokec4 if\cf5 \strokec5  (binary.charAt(i) == \cf10 \strokec10 '1'\cf5 \strokec5 ) \{\cb7 \
\cb1                 \cf4 \strokec4 if\cf5 \strokec5  (counter >= highestCounter) \{\cb7 \
\cb1                     highestCounter = counter;\cb7 \
\cb1                 \}\cb7 \
\cb1                 counter = \cf8 \strokec8 0\cf5 \strokec5 ;\cb7 \
\cb1             \}\cb7 \
\cb1         \}\cb7 \
\cb1         \cf4 \strokec4 return\cf5 \strokec5  highestCounter;\cb7 \
\cb1     \}\cb7 \
\cb1 \}}